//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.08.20 at 03:01:00 PM CEST 
//
package com.witbooking.middleware.integration.rategain.model;

import com.witbooking.middleware.integration.rategain.ConstantsRateGain;

import javax.xml.bind.annotation.*;

/**
 * <p>Java class for ErrorType complex type.
 * <p/>
 * <p>The following schema fragment specifies the expected content contained
 * within this class.
 * <p/>
 * <pre>
 * &lt;complexType name="ErrorType">
 *   &lt;simpleContent>
 *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
 *       &lt;attribute name="Type" use="required" type="{http://cgbridge.rategain.com/OTA/2012/05}CodeType" />
 *       &lt;attribute name="Code" use="required" type="{http://cgbridge.rategain.com/OTA/2012/05}CodeType" />
 *     &lt;/extension>
 *   &lt;/simpleContent>
 * &lt;/complexType>
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ErrorType", propOrder = {
        "value"
})
@XmlRootElement(name = "ErrorType")
public class ErrorType {

    @XmlValue
    protected String value;
    @XmlAttribute(name = "Type", required = true)
    protected String type;
    @XmlAttribute(name = "Code", required = true)
    protected String code;

    /**
     * Gets the value of the value property.
     *
     * @return possible object is {@link String }
     */
    public String getValue() {
        return value;
    }

    /**
     * Sets the value of the value property.
     *
     * @param value allowed object is {@link String }
     */
    public void setValue(String value) {
        this.value = value;
    }

    /**
     * Gets the value of the type property.
     *
     * @return possible object is {@link String }
     */
    public String getType() {
        return type;
    }

    /**
     * Sets the value of the type property.
     *
     * @param value allowed object is {@link String }
     */
    public void setType(String value) {
        this.type = value;
    }

    /**
     * Gets the value of the code property.
     *
     * @return possible object is {@link String }
     */
    public String getCode() {
        return code;
    }

    /**
     * Sets the value of the code property.
     *
     * @param value allowed object is {@link String }
     */
    public void setCode(String value) {
        this.code = value;
    }

    public static ErrorType getErrorTypeNoImplementationCodeInvalidCurrency(final String msg) {
        final ErrorType error = getErrorTypeNoImplemetantation();
        error.setCode(ConstantsRateGain.Error.Code.INVALID_CURRENCY);
        if (msg != null) {
            error.setValue(msg);
        }
        return error;
    }

    public static ErrorType getErrorTypeNoImplementationCodeInvalidValue(final String msg) {
        final ErrorType error = getErrorTypeNoImplemetantation();
        error.setCode(ConstantsRateGain.Error.Code.INVALID_VALUE);
        if (msg != null) {
            error.setValue(msg);
        }
        return error;
    }

    public static ErrorType getErrorTypeProcessingExceptionCodeInvalidValue(final String msg) {
        final ErrorType error = getErrorTypeProcessingException();
        error.setCode(ConstantsRateGain.Error.Code.INVALID_VALUE);
        if (msg != null) {
            error.setValue(msg);
        }
        return error;
    }

    public static ErrorType getErrorTypeProcessingExceptionCodeUnableToProcess(final String msg) {
        final ErrorType error = getErrorTypeProcessingException();
        error.setCode(ConstantsRateGain.Error.Code.UNABLE_TO_PROCESS);
        if (msg != null) {
            error.setValue(msg);
        }
        return error;
    }

    public static ErrorType getErrorTypeNoImplementationCodeInvalidPropretyCode(final String msg) {
        final ErrorType error = getErrorTypeNoImplemetantation();
        error.setCode(ConstantsRateGain.Error.Code.INVALID_PROPERTY_CODE);
        if (msg != null) {
            error.setValue(msg);
        }
        return error;
    }

    public static ErrorType getErrorTypeNoImplemetantation() {
        final ErrorType error = new ErrorType();
        error.setType(ConstantsRateGain.Error.Type.NO_IMPLEMENTATION);
        return error;
    }

    public static ErrorType getErrorTypeProcessingException() {
        final ErrorType error = new ErrorType();
        error.setType(ConstantsRateGain.Error.Type.PROCESSING_EXCEPTION);
        return error;
    }

    /**
     * @return <code>ErrorType</code> Object with error type
     *         {@link ConstantsRateGain.Error.Type#AUTHENTICATION} and error code
     *         {@link ConstantsRateGain.Error.Code#REQUIRED_FIELD_MISSING}.
     * @see #getErrorTypeAuthentication()
     */
    public static ErrorType getErrorTypeAuthenticationCodeRequiredMissing() {
        ErrorType error = getErrorTypeAuthentication();
        error.setCode(ConstantsRateGain.Error.Code.REQUIRED_FIELD_MISSING);
        return error;
    }

    /**
     * @return <code>ErrorType</code> Object with error type
     *         {@link ConstantsRateGain.Error.Type#AUTHENTICATION} and error code
     *         {@link ConstantsRateGain.Error.Code#REQUIRED_FIELD_MISSING}.
     * @see #getErrorTypeAuthentication()
     */
    public static ErrorType getErrorTypeAuthenticationCodePasswordInvalid(final String msg) {
        ErrorType error = getErrorTypeAuthentication();
        error.setCode(ConstantsRateGain.Error.Code.PASSWORD_INVALID);
        if (msg != null) {
            error.setValue(msg);
        }
        return error;
    }

    /**
     * @return <code>ErrorType</code> Object with error type
     *         {@link ConstantsRateGain.Error.Type#AUTHENTICATION} and error code
     *         {@link ConstantsRateGain.Error.Code#UNDETERMINED_ERROR}.
     * @see #getErrorTypeAuthentication()
     */
    public static ErrorType getErrorTypeAuthenticationCodeUndetermined() {
        ErrorType error = getErrorTypeAuthentication();
        error.setCode(ConstantsRateGain.Error.Code.UNDETERMINED_ERROR);
        return error;
    }

    public static ErrorType getErrorTypeProccessingExceptionCodeNoHotelMatchFound(final String msg) {
        ErrorType error = getErrorTypeProcessingException();
        error.setCode(ConstantsRateGain.Error.Code.NO_HOTEL_MATCH_FOUND);
        if (msg != null) {
            error.setValue(msg);
        }
        return error;
    }

    public static ErrorType getErrorTypeAuthenticationModelCodeRequiredFieldMissing() {
        ErrorType error = getErrorTypeAuthenticationModel();
        error.setCode(ConstantsRateGain.Error.Code.REQUIRED_FIELD_MISSING);
        return error;
    }

    public static ErrorType getErrorTypeRequiredFieldMissingCodeRequiredFieldMissing() {
        ErrorType error = getErrorTypeRequiredFieldMissing();
        error.setCode(ConstantsRateGain.Error.Code.REQUIRED_FIELD_MISSING);
        return error;
    }

    public static ErrorType getErrorTypeRequiredFieldMissingCodeInvalidRoomTypeCode(String msg) {
        ErrorType error = getErrorTypeRequiredFieldMissing();
        error.setCode(ConstantsRateGain.Error.Code.INVALID_ROOM_TYPE_CODE);
        if (msg != null) {
            error.setValue(msg);
        }
        return error;
    }

    public static ErrorType getErrorTypeApplicationErrorCodeUndeterminedError() {
        ErrorType error = getErrorTypeApplicationError();
        error.setCode(ConstantsRateGain.Error.Code.UNDETERMINED_ERROR);
        return error;
    }

    /**
     * @return <code>ErrorType</code> Object with error type
     *         {@link ConstantsRateGain.Error.Type#AUTHENTICATION} without error code.
     */
    public static ErrorType getErrorTypeAuthentication() {
        ErrorType error = new ErrorType();
        error.setType(ConstantsRateGain.Error.Type.AUTHENTICATION);
        return error;
    }

    /**
     * @return <code>ErrorType</code> Object with error type
     *         {@link ConstantsRateGain.Error.Type#UNKNOWN} and error code
     *         {@link ConstantsRateGain.Error.Code#UNDETERMINED_ERROR}.
     * @see #getErrorTypeUnknown()
     */
    public static ErrorType getErrorTypeUnknownCodeUndetermined() {
        ErrorType error = getErrorTypeUnknown();
        error.setCode(ConstantsRateGain.Error.Code.UNDETERMINED_ERROR);
        return error;
    }

    /**
     * @return <code>ErrorType</code> Object with type
     *         {@link ConstantsRateGain.Error.Type#UNKNOWN} without error code.
     */
    public static ErrorType getErrorTypeUnknown() {
        ErrorType error = new ErrorType();
        error.setType(ConstantsRateGain.Error.Type.UNKNOWN);
        return error;
    }

    public static ErrorType getErrorTypeAuthenticationModel() {
        ErrorType error = new ErrorType();
        error.setType(ConstantsRateGain.Error.Type.AUTHENTICATION_MODEL);
        return error;
    }

    public static ErrorType getErrorTypeRequiredFieldMissing() {
        ErrorType error = new ErrorType();
        error.setType(ConstantsRateGain.Error.Type.REQUIRED_FIELD_MISSING);
        return error;
    }

    public static ErrorType getErrorTypeApplicationError() {
        ErrorType error = new ErrorType();
        error.setType(ConstantsRateGain.Error.Type.APPLICATION_ERROR);
        return error;
    }
}
